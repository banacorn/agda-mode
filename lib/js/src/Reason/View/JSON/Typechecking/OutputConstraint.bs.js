// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Util$AgdaMode = require("../../../Util.bs.js");
var Comparison$AgdaMode = require("./Comparison.bs.js");
var Syntax__Concrete$AgdaMode = require("../Syntax/Syntax__Concrete.bs.js");

var component = ReasonReact.statelessComponent("OutputConstraint");

function make(meta, _children) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function (_self) {
                switch (meta.tag | 0) {
                  case 0 : 
                      return React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])), " : ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[1], /* array */[])));
                  case 1 : 
                      return React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[2], /* array */[])), ReasonReact.element(undefined, undefined, Comparison$AgdaMode.make(meta[0], /* array */[])), ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[3], /* array */[])), " : ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[1], /* array */[])));
                  case 2 : 
                      return React.createElement("li", undefined, Util$AgdaMode.React[/* sepBy */0](", ", List.map((function (value) {
                                            return ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](value, /* array */[]));
                                          }), meta[1])), ReasonReact.element(undefined, undefined, Comparison$AgdaMode.make(/* CmpEq */1, /* array */[])), Util$AgdaMode.React[/* sepBy */0](", ", List.map((function (value) {
                                            return ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](value, /* array */[]));
                                          }), meta[2])), " : ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])));
                  case 3 : 
                      return React.createElement("li", undefined, "Type ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])));
                  case 7 : 
                      return React.createElement("li", undefined, "Sort ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])));
                  case 4 : 
                  case 5 : 
                  case 6 : 
                  case 8 : 
                      return React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[1], /* array */[])), ReasonReact.element(undefined, undefined, Comparison$AgdaMode.make(meta[0], /* array */[])), ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[2], /* array */[])));
                  case 9 : 
                      return React.createElement("li", undefined, "Unimplemented: outputConstraint::Guard");
                  case 10 : 
                      return React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])), " := ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[1], /* array */[])));
                  case 11 : 
                      return React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])), " := ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[1], /* array */[])), " :? ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[2], /* array */[])));
                  case 12 : 
                      return React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])), " := (_ : ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[2], /* array */[])), ") ", Util$AgdaMode.React[/* sepBy */0](", ", List.map((function (value) {
                                            return React.createElement(React.Fragment, undefined, "(", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](value, /* array */[])), ")");
                                          }), meta[1])), ": ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[3], /* array */[])));
                  case 13 : 
                      return React.createElement("li", undefined, "Is empty: ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])));
                  case 14 : 
                      return React.createElement("li", undefined, "Not empty type of sizes: ", ReasonReact.element(undefined, undefined, Syntax__Concrete$AgdaMode.Expr[/* make */0](meta[0], /* array */[])));
                  case 15 : 
                      return React.createElement("li", undefined, "Unimplemented: OutputConstraint::FindInScopeOF");
                  case 16 : 
                      return React.createElement("li", undefined, "Unimplemented: OutputConstraint::PTSInstance");
                  
                }
              }),
            component[/* initialState */10],
            component[/* retainedProps */11],
            component[/* reducer */12],
            component[/* jsElementWrapped */13]
          ]);
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
