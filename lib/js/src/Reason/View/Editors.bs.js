// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Util$AgdaMode = require("../Util.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var QueryCancelled = Caml_exceptions.create("Editors-AgdaMode.QueryCancelled");

function make(editor) {
  return /* record */Block.record([
            "focused",
            "main",
            "query"
          ], [
            0,
            editor,
            Block.record([
                "value",
                "placeholder",
                "ref",
                "telePromise"
              ], [
                "",
                "",
                undefined,
                Util$AgdaMode.TelePromise[/* make */2](/* () */0)
              ])
          ]);
}

function getFocusedEditor(editors) {
  var match = editors[/* focused */0];
  if (match) {
    var match$1 = editors[/* query */2][/* ref */2];
    if (match$1 !== undefined) {
      return Js_primitive.valFromOption(match$1);
    } else {
      return editors[/* main */1];
    }
  } else {
    return editors[/* main */1];
  }
}

function focusMain(editors) {
  var match = editors[/* focused */0];
  if (match) {
    var element = atom.views.getView(editors[/* main */1]);
    element.focus();
    return /* () */0;
  } else {
    return /* () */0;
  }
}

function focusGeneral(editors) {
  var match = editors[/* focused */0];
  if (match) {
    return /* () */0;
  } else {
    var match$1 = editors[/* query */2][/* ref */2];
    if (match$1 !== undefined) {
      var element = atom.views.getView(Js_primitive.valFromOption(match$1));
      element.focus();
      return /* () */0;
    } else {
      return /* () */0;
    }
  }
}

function query(editors) {
  return Curry._1(editors[/* query */2][/* telePromise */3][/* wire */0], /* () */0);
}

function answer(editors) {
  return editors[/* query */2][/* telePromise */3][/* resolve */1];
}

function reject(editors) {
  return editors[/* query */2][/* telePromise */3][/* reject */2];
}

exports.QueryCancelled = QueryCancelled;
exports.make = make;
exports.getFocusedEditor = getFocusedEditor;
exports.focusMain = focusMain;
exports.focusGeneral = focusGeneral;
exports.query = query;
exports.answer = answer;
exports.reject = reject;
/* Util-AgdaMode Not a pure module */
