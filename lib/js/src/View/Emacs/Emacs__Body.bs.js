// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var ReasonReactCompat = require("reason-react/lib/js/src/ReasonReactCompat.js");
var Emacs__Error$AgdaMode = require("./Emacs__Error.bs.js");
var Emacs__Context$AgdaMode = require("./Emacs__Context.bs.js");
var Emacs__WhyInScope$AgdaMode = require("./Emacs__WhyInScope.bs.js");
var Emacs__SearchAbout$AgdaMode = require("./Emacs__SearchAbout.bs.js");
var Emacs__GoalTypeContext$AgdaMode = require("./Emacs__GoalTypeContext.bs.js");
var Emacs__AllGoalsWarnings$AgdaMode = require("./Emacs__AllGoalsWarnings.bs.js");

function Emacs__Body(Props) {
  var data = Props.data;
  var exit = 0;
  switch (data.tag | 0) {
    case 0 : 
        return React.createElement(Emacs__AllGoalsWarnings$AgdaMode.make, {
                    value: data[0]
                  });
    case 1 : 
        return React.createElement(Emacs__GoalTypeContext$AgdaMode.make, {
                    body: data[0]
                  });
    case 2 : 
    case 3 : 
        exit = 1;
        break;
    case 4 : 
        return React.createElement(Emacs__WhyInScope$AgdaMode.make, {
                    body: data[0]
                  });
    case 5 : 
        return React.createElement(Emacs__SearchAbout$AgdaMode.make, {
                    body: data[0]
                  });
    case 6 : 
        return React.createElement(Emacs__Error$AgdaMode.make, {
                    body: data[0]
                  });
    case 7 : 
        var body = data[0];
        var match = Rebase.$$String[/* isEmpty */5](body);
        if (match) {
          return null;
        } else {
          return React.createElement("p", undefined, body);
        }
    
  }
  if (exit === 1) {
    return React.createElement(Emacs__Context$AgdaMode.make, {
                body: data[0]
              });
  }
  
}

var component = ReasonReact.statelessComponent("Emacs__Body");

function make(data, children) {
  return ReasonReactCompat.wrapReactForReasonReact(Emacs__Body, {
              data: data
            }, children);
}

var Jsx2 = /* module */Block.localModule([
    "component",
    "make"
  ], [
    component,
    make
  ]);

var make$1 = Emacs__Body;

exports.make = make$1;
exports.Jsx2 = Jsx2;
/* component Not a pure module */
