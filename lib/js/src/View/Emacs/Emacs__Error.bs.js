// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Util$AgdaMode = require("../../Util.bs.js");
var Emacs__Parser$AgdaMode = require("./Emacs__Parser.bs.js");
var Emacs__Component$AgdaMode = require("./Emacs__Component.bs.js");

function parse(raw) {
  var lines = raw.split("\n");
  var __x = Emacs__Parser$AgdaMode.partiteWarningsOrErrors("errors")(Util$AgdaMode.Dict[/* partite */0]((function (param) {
              var match = param[1] === 0;
              if (match) {
                return "errors";
              }
              
            }), lines));
  return Rebase.$$Option[/* mapOr */18]((function (metas) {
                return Rebase.$$Array[/* filterMap */23]((function (x) {
                              return x;
                            }), Rebase.$$Array[/* map */0](Emacs__Component$AgdaMode.WarningError[/* parseError */2], metas));
              }), /* array */[], Js_dict.get(__x, "errors"));
}

function Emacs__Error(Props) {
  var body = Props.body;
  return Util$AgdaMode.React[/* manyIn */2]("ul")(Rebase.$$Array[/* map */0]((function (value) {
                    return React.createElement(Emacs__Component$AgdaMode.WarningError[/* make */3], {
                                value: value
                              });
                  }), parse(body)));
}

var make = Emacs__Error;

exports.parse = parse;
exports.make = make;
/* react Not a pure module */
