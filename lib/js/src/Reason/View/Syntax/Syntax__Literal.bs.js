// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var $$String = require("bs-platform/lib/js/string.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Link$AgdaMode = require("../Link.bs.js");

var component = ReasonReact.statelessComponent("Literal");

function make(value, _) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function () {
                var exit = 0;
                switch (value.tag | 0) {
                  case 0 : 
                  case 1 : 
                      exit = 1;
                      break;
                  case 2 : 
                      return ReasonReact.element(undefined, undefined, Link$AgdaMode.make(value[0], true, true, undefined, /* array */[Pervasives.string_of_float(value[1])]));
                  case 3 : 
                      return ReasonReact.element(undefined, undefined, Link$AgdaMode.make(value[0], true, true, undefined, /* array */["\"" + (value[1] + "\"")]));
                  case 4 : 
                      return ReasonReact.element(undefined, undefined, Link$AgdaMode.make(value[0], true, true, undefined, /* array */["'" + ($$String.make(1, value[1]) + "'")]));
                  case 5 : 
                      return ReasonReact.element(undefined, undefined, Link$AgdaMode.make(value[0], true, true, undefined, /* array */[value[1]]));
                  case 6 : 
                      return ReasonReact.element(undefined, undefined, Link$AgdaMode.make(value[0], true, true, undefined, /* array */["_" + String(value[2])]));
                  
                }
                if (exit === 1) {
                  return ReasonReact.element(undefined, undefined, Link$AgdaMode.make(value[0], true, true, undefined, /* array */[String(value[1])]));
                }
                
              }),
            component[/* initialState */10],
            component[/* retainedProps */11],
            component[/* reducer */12],
            component[/* jsElementWrapped */13]
          ]);
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
