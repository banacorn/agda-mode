// Generated by BUCKLESCRIPT VERSION 4.0.17, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Util$AgdaMode = require("../../Util.bs.js");
var Breadcrumb$AgdaMode = require("./Breadcrumb.bs.js");
var Connection$AgdaMode = require("./Connection.bs.js");

function initialState(param) {
  return /* record */Block.record(["uri"], [0]);
}

function reducer(action, state) {
  return /* Update */Block.variant("Update", 0, [/* record */Block.record(["uri"], [action[0]])]);
}

var component = ReasonReact.reducerComponent("Settings");

function at(x, y, classNames) {
  return Curry._1(Util$AgdaMode.ClassName[/* serialize */2], Util$AgdaMode.ClassName[/* addWhen */1]("hidden", Caml_obj.caml_notequal(x, y), classNames));
}

function make(editors, onConnectionEditorRef, _children) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function (self) {
                var match = self[/* state */1];
                var uri = match[/* uri */0];
                return React.createElement("section", {
                            className: "agda-settings",
                            tabIndex: -1
                          }, ReasonReact.element(undefined, undefined, Breadcrumb$AgdaMode.make(uri, (function (uri) {
                                      return Curry._1(self[/* send */3], /* Navigate */Block.simpleVariant("Navigate", [uri]));
                                    }), /* array */[])), React.createElement("div", {
                                className: "agda-settings-pages"
                              }, React.createElement("ul", {
                                    className: at(/* Root */0, uri, /* :: */Block.simpleVariant("::", [
                                            "agda-settings-menu",
                                            /* [] */0
                                          ]))
                                  }, React.createElement("li", {
                                        onClick: (function (param) {
                                            return Curry._1(self[/* send */3], /* Navigate */Block.simpleVariant("Navigate", [/* Connection */1]));
                                          })
                                      }, React.createElement("span", {
                                            className: "icon icon-plug"
                                          }, "Connection")), React.createElement("li", {
                                        onClick: (function (param) {
                                            return Curry._1(self[/* send */3], /* Navigate */Block.simpleVariant("Navigate", [/* Protocol */2]));
                                          })
                                      }, React.createElement("span", {
                                            className: "icon icon-comment-discussion"
                                          }, "Protocol"))), ReasonReact.element(undefined, undefined, Connection$AgdaMode.make(editors, onConnectionEditorRef, uri !== /* Connection */1, true, false, (function (prim) {
                                          console.log(prim);
                                          return /* () */0;
                                        }), true, "asdf", "???.???", "Emacs", /* array */[]))));
              }),
            initialState,
            component[/* retainedProps */11],
            reducer,
            component[/* jsElementWrapped */13]
          ]);
}

var URI = 0;

exports.URI = URI;
exports.initialState = initialState;
exports.reducer = reducer;
exports.component = component;
exports.at = at;
exports.make = make;
/* component Not a pure module */
