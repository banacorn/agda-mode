// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Async$AgdaMode = require("./Util/Async.bs.js");
var Event$AgdaMode = require("./Util/Event.bs.js");
var Channel$AgdaMode = require("./Util/Channel.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function makeHandles(param) {
  var activatePanel = Channel$AgdaMode.make(/* () */0);
  var deactivatePanel = Channel$AgdaMode.make(/* () */0);
  var toggleDocking = Channel$AgdaMode.make(/* () */0);
  var display = Channel$AgdaMode.make(/* () */0);
  var inquire = Channel$AgdaMode.make(/* () */0);
  var onInquire = Event$AgdaMode.make(/* () */0);
  var updateIsPending = Channel$AgdaMode.make(/* () */0);
  var updateShouldDisplay = Channel$AgdaMode.make(/* () */0);
  var updateConnection = Event$AgdaMode.make(/* () */0);
  var inquireConnection = Event$AgdaMode.make(/* () */0);
  var onInquireConnection = Event$AgdaMode.make(/* () */0);
  var activateSettingsView = Event$AgdaMode.make(/* () */0);
  var onSettingsView = Event$AgdaMode.make(/* () */0);
  var navigateSettingsView = Event$AgdaMode.make(/* () */0);
  var interceptAndInsertKey = Event$AgdaMode.make(/* () */0);
  var activateInputMethod = Event$AgdaMode.make(/* () */0);
  var onInputMethodActivationChange = Event$AgdaMode.make(/* () */0);
  var onInputMethodChange = Event$AgdaMode.make(/* () */0);
  var onMouseEvent = Event$AgdaMode.make(/* () */0);
  var destroy = Channel$AgdaMode.make(/* () */0);
  return /* record */Caml_chrome_debugger.record([
            "activatePanel",
            "deactivatePanel",
            "toggleDocking",
            "display",
            "inquire",
            "onInquire",
            "updateIsPending",
            "updateShouldDisplay",
            "updateConnection",
            "inquireConnection",
            "onInquireConnection",
            "activateSettingsView",
            "onSettingsView",
            "navigateSettingsView",
            "destroy",
            "activateInputMethod",
            "interceptAndInsertKey",
            "onInputMethodActivationChange",
            "onInputMethodChange",
            "onMouseEvent"
          ], [
            activatePanel,
            deactivatePanel,
            toggleDocking,
            display,
            inquire,
            onInquire,
            updateIsPending,
            updateShouldDisplay,
            updateConnection,
            inquireConnection,
            onInquireConnection,
            activateSettingsView,
            onSettingsView,
            navigateSettingsView,
            destroy,
            activateInputMethod,
            interceptAndInsertKey,
            onInputMethodActivationChange,
            onInputMethodChange,
            onMouseEvent
          ]);
}

function make(handles) {
  var activate = function (param) {
    return Channel$AgdaMode.send(/* () */0, handles[/* activatePanel */0]);
  };
  var deactivate = function (param) {
    return Channel$AgdaMode.send(/* () */0, handles[/* deactivatePanel */1]);
  };
  var toggleDocking = function (param) {
    return Channel$AgdaMode.send(/* () */0, handles[/* toggleDocking */2]);
  };
  var display = function (text, style, body) {
    return Channel$AgdaMode.send(/* tuple */[
                /* record */Caml_chrome_debugger.record([
                    "text",
                    "style"
                  ], [
                    text,
                    style
                  ]),
                body
              ], handles[/* display */3]);
  };
  var inquire = function (text, placeholder, value) {
    return Channel$AgdaMode.send(/* tuple */[
                /* record */Caml_chrome_debugger.record([
                    "text",
                    "style"
                  ], [
                    text,
                    0
                  ]),
                placeholder,
                value
              ], handles[/* inquire */4]);
  };
  var updateIsPending = function (isPending) {
    return Channel$AgdaMode.send(isPending, handles[/* updateIsPending */6]);
  };
  var updateShouldDisplay = function (shouldDisplay) {
    return Channel$AgdaMode.send(shouldDisplay, handles[/* updateShouldDisplay */7]);
  };
  var onMouseEvent = handles[/* onMouseEvent */19];
  var activateInputMethod = function (activate) {
    return Event$AgdaMode.emitOk(activate, handles[/* activateInputMethod */15]);
  };
  var interceptAndInsertKey = function (symbol) {
    return Event$AgdaMode.emitOk(symbol, handles[/* interceptAndInsertKey */16]);
  };
  var onInputMethodActivationChange = handles[/* onInputMethodActivationChange */17];
  var onInputMethodChange = handles[/* onInputMethodChange */18];
  var navigateSettings = function (where) {
    return Event$AgdaMode.emitOk(where, handles[/* navigateSettingsView */13]);
  };
  var activateSettings = function (param) {
    return Event$AgdaMode.emitOk(true, handles[/* activateSettingsView */11]);
  };
  var openSettings = function (param) {
    var promise = Event$AgdaMode.once(handles[/* onSettingsView */12]);
    Event$AgdaMode.emitOk(true, handles[/* activateSettingsView */11]);
    return promise;
  };
  var updateConnection = function (connection, error) {
    return Event$AgdaMode.emitOk(/* tuple */[
                connection,
                error
              ], handles[/* updateConnection */8]);
  };
  var onInquireConnection = handles[/* onInquireConnection */10];
  var inquireConnection = function (param) {
    var promise = Event$AgdaMode.once(onInquireConnection);
    Event$AgdaMode.emitOk(/* () */0, handles[/* inquireConnection */9]);
    return promise;
  };
  var onDestroy = Event$AgdaMode.make(/* () */0);
  var destroy = function (param) {
    return Async$AgdaMode.passOk((function (param) {
                    return Event$AgdaMode.emitOk(/* () */0, onDestroy);
                  }))(Async$AgdaMode.thenOk((function (param) {
                        return Channel$AgdaMode.send(/* () */0, handles[/* destroy */14]);
                      }))(Async$AgdaMode.thenOk((function (param) {
                            Event$AgdaMode.emitOk(false, handles[/* activateInputMethod */15]);
                            return Async$AgdaMode.resolve(/* () */0);
                          }))(Channel$AgdaMode.send(/* () */0, handles[/* deactivatePanel */1]))));
  };
  return /* record */Caml_chrome_debugger.record([
            "activate",
            "deactivate",
            "toggleDocking",
            "display",
            "inquire",
            "updateIsPending",
            "updateShouldDisplay",
            "destroy",
            "onDestroy",
            "onMouseEvent",
            "activateInputMethod",
            "interceptAndInsertKey",
            "onInputMethodActivationChange",
            "onInputMethodChange",
            "navigateSettings",
            "activateSettings",
            "openSettings",
            "updateConnection",
            "onInquireConnection",
            "inquireConnection"
          ], [
            activate,
            deactivate,
            toggleDocking,
            display,
            inquire,
            updateIsPending,
            updateShouldDisplay,
            destroy,
            onDestroy,
            onMouseEvent,
            activateInputMethod,
            interceptAndInsertKey,
            onInputMethodActivationChange,
            onInputMethodChange,
            navigateSettings,
            activateSettings,
            openSettings,
            updateConnection,
            onInquireConnection,
            inquireConnection
          ]);
}

var $$Event = 0;

exports.$$Event = $$Event;
exports.makeHandles = makeHandles;
exports.make = make;
/* Async-AgdaMode Not a pure module */
