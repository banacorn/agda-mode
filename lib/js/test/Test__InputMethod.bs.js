// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Assert$BsMocha = require("bs-mocha/lib/js/src/Assert.bs.js");
var Promise$BsMocha = require("bs-mocha/lib/js/src/Promise.bs.js");
var Test__Util$AgdaMode = require("./Test__Util.bs.js");

Mocha$BsMocha.describe("Input Method")(undefined, undefined, undefined, (function (param) {
        Promise$BsMocha.after_each(undefined)(undefined, undefined, undefined, Test__Util$AgdaMode.Package[/* cleanup */4]);
        Promise$BsMocha.it("should not add class '.agda-mode-input-method-activated' to the editor element before triggering")(undefined, undefined, undefined, (function (param) {
                return Test__Util$AgdaMode.openAndLoad("Blank1.agda").then((function (instance) {
                              Assert$BsMocha.equal(undefined, false, atom.views.getView(instance[/* editors */1][/* source */1]).classList.contains("agda-mode-input-method-activated"));
                              return Promise.resolve(/* () */0);
                            }));
              }));
        Promise$BsMocha.it("should add class '.agda-mode-input-method-activated' to the editor element after triggering")(undefined, undefined, undefined, (function (param) {
                var partial_arg = Test__Util$AgdaMode.Keyboard[/* press */1];
                return Test__Util$AgdaMode.openAndLoad("Blank1.agda").then((function (param) {
                                return partial_arg("\\", param);
                              })).then((function (instance) {
                              Assert$BsMocha.ok(atom.views.getView(instance[/* editors */1][/* source */1]).classList.contains("agda-mode-input-method-activated"));
                              return Promise.resolve(/* () */0);
                            }));
              }));
        Promise$BsMocha.it("should not display the keyboard before triggering")(undefined, undefined, undefined, (function (param) {
                return Test__Util$AgdaMode.openAndLoad("Blank1.agda").then(Test__Util$AgdaMode.View[/* getPanel */5]).then((function (panel) {
                              var match = panel.querySelector(".input-method");
                              if (match == null) {
                                Assert$BsMocha.fail("cannot find `.input-method`");
                              } else {
                                Assert$BsMocha.ok(match.classList.contains("hidden"));
                              }
                              return Promise.resolve(/* () */0);
                            }));
              }));
        return Promise$BsMocha.it("should display the keyboard after triggering")(undefined, undefined, undefined, (function (param) {
                      var partial_arg = Test__Util$AgdaMode.Keyboard[/* press */1];
                      return Test__Util$AgdaMode.openAndLoad("Blank1.agda").then((function (param) {
                                        return partial_arg("\\", param);
                                      })).then(Test__Util$AgdaMode.View[/* getPanel */5]).then((function (panel) {
                                    var match = panel.querySelector(".input-method");
                                    if (match == null) {
                                      Assert$BsMocha.fail("cannot find `.input-method`");
                                    } else {
                                      Assert$BsMocha.equal(undefined, false, match.classList.contains("hidden"));
                                    }
                                    return Promise.resolve(/* () */0);
                                  }));
                    }));
      }));

/*  Not a pure module */
