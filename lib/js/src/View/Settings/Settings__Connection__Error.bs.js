// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var ReasonReactCompat = require("reason-react/lib/js/src/ReasonReactCompat.js");
var Connection$AgdaMode = require("../../Connection.bs.js");

function Settings__Connection__Error(Props) {
  var error = Props.error;
  var match = Connection$AgdaMode.$$Error[/* toString */0](error);
  return React.createElement(React.Fragment, undefined, React.createElement("hr", undefined), React.createElement("h2", undefined, "Error: " + match[0]), React.createElement("p", undefined, "error message:"), React.createElement("pre", {
                  className: "inset-panel padded text-warning error"
                }, match[1]));
}

var component = ReasonReact.statelessComponent("Settings__Connection__Error");

function make(error, children) {
  return ReasonReactCompat.wrapReactForReasonReact(Settings__Connection__Error, {
              error: error
            }, children);
}

var Jsx2 = /* module */Block.localModule([
    "component",
    "make"
  ], [
    component,
    make
  ]);

var make$1 = Settings__Connection__Error;

exports.make = make$1;
exports.Jsx2 = Jsx2;
/* component Not a pure module */
