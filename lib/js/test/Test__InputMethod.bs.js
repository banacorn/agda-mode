// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Promise$BsMocha = require("bs-mocha/lib/js/src/Promise.bs.js");
var Test__Util$AgdaMode = require("./Test__Util.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

Mocha$BsMocha.describe("Input Method")(undefined, undefined, undefined, (function (param) {
        var activationPromise = /* record */Caml_chrome_debugger.record(["contents"], [undefined]);
        Promise$BsMocha.before_each(undefined)(undefined, undefined, undefined, (function (param) {
                activationPromise[0] = Caml_option.some(atom.packages.activatePackage("agda-mode"));
                return Promise.resolve(/* () */0);
              }));
        Promise$BsMocha.after(undefined)(undefined, undefined, undefined, (function (param) {
                activationPromise[0] = undefined;
                atom.packages.deactivatePackage("agda-mode", false);
                return Test__Util$AgdaMode.closeFile(Test__Util$AgdaMode.asset("Blank1.agda"));
              }));
        return Promise$BsMocha.it("should be activated after triggering 'agda-mode:load' on .agda files")(undefined, undefined, undefined, (function (param) {
                      return Test__Util$AgdaMode.openFile(Test__Util$AgdaMode.asset("Blank1.agda")).then((function (editor) {
                                    console.log(editor);
                                    console.log(editor);
                                    return Promise.resolve(/* () */0);
                                  }));
                    }));
      }));

/*  Not a pure module */
