// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Util$AgdaMode = require("../Util.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var QueryCanceled = Caml_exceptions.create("Editors-AgdaMode.QueryCanceled");

function make(editor) {
  return /* record */Block.record([
            "main",
            "general"
          ], [
            editor,
            Block.record([
                "value",
                "placeholder",
                "ref",
                "focused",
                "telePromise"
              ], [
                "",
                "",
                undefined,
                false,
                Util$AgdaMode.TelePromise[/* make */2](/* () */0)
              ])
          ]);
}

function getFocusedEditor(editors) {
  var match = editors[/* general */1][/* ref */2];
  if (match !== undefined) {
    var match$1 = editors[/* general */1][/* focused */3];
    if (match$1) {
      return Js_primitive.valFromOption(match);
    } else {
      return editors[/* main */0];
    }
  } else {
    return editors[/* main */0];
  }
}

function focusMain(editors) {
  var element = atom.views.getView(editors[/* main */0]);
  element.focus();
  return /* () */0;
}

function focusGeneral(editors) {
  var match = editors[/* general */1][/* ref */2];
  if (match !== undefined) {
    var element = atom.views.getView(Js_primitive.valFromOption(match));
    element.focus();
    return /* () */0;
  } else {
    return /* () */0;
  }
}

function queryGeneral(editors) {
  return Curry._1(editors[/* general */1][/* telePromise */4][/* wire */0], /* () */0);
}

function answerGeneral(editors) {
  return editors[/* general */1][/* telePromise */4][/* resolve */1];
}

function rejectGeneral(editors) {
  return editors[/* general */1][/* telePromise */4][/* reject */2];
}

exports.QueryCanceled = QueryCanceled;
exports.make = make;
exports.getFocusedEditor = getFocusedEditor;
exports.focusMain = focusMain;
exports.focusGeneral = focusGeneral;
exports.queryGeneral = queryGeneral;
exports.answerGeneral = answerGeneral;
exports.rejectGeneral = rejectGeneral;
/* Util-AgdaMode Not a pure module */
