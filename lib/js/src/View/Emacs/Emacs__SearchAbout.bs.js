// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var Emacs__Parser$AgdaMode = require("./Emacs__Parser.bs.js");
var Emacs__Component$AgdaMode = require("./Emacs__Component.bs.js");

function parse(raw) {
  var lines = raw.split("\n");
  var target = Rebase.$$Option.getOr("???", Rebase.$$Option.map((function (param) {
              return param.slice(18);
            }), Rebase.$$Array.get(lines, 0)));
  var outputs = Rebase.$$Array.filterMap((function (x) {
          return x;
        }), Rebase.$$Array.map(Emacs__Component$AgdaMode.Output.parse, Emacs__Parser$AgdaMode.unindent(Rebase.$$Array.map((function (s) {
                      return s.slice(2);
                    }), lines.slice(1)))));
  return [
          target,
          outputs
        ];
}

function Emacs__SearchAbout(Props) {
  var body = Props.body;
  var match = parse(body);
  var outputs = match[1];
  var target = match[0];
  if (Rebase.$$Array.length(outputs) === 0) {
    return React.createElement("p", undefined, "There are no definitions about " + target);
  } else {
    return React.createElement(React.Fragment, undefined, React.createElement("p", undefined, "Definitions about " + (target + ":")), React.createElement("ul", undefined, Rebase.$$Array.mapi((function (value, i) {
                          return React.createElement(Emacs__Component$AgdaMode.Output.make, {
                                      value: value,
                                      key: String(i)
                                    });
                        }), outputs)));
  }
}

var make = Emacs__SearchAbout;

exports.parse = parse;
exports.make = make;
/* react Not a pure module */
