// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Events = require("events");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Async$AgdaMode = require("./Async.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function make(param) {
  return /* record */Caml_chrome_debugger.record([
            "emitter",
            "resource"
          ], [
            new Events.EventEmitter(),
            Caml_chrome_debugger.record(["contents"], [undefined])
          ]);
}

function acquire(self) {
  var match = self[/* resource */1][0];
  if (match !== undefined) {
    return Async$AgdaMode.resolve(Caml_option.valFromOption(match));
  } else {
    return Async$AgdaMode.make((function (resolve, param) {
                  self[/* emitter */0].on("supply", resolve);
                  return /* () */0;
                }));
  }
}

function supply(x, self) {
  self[/* resource */1][0] = Caml_option.some(x);
  self[/* emitter */0].emit("supply", x);
  return /* () */0;
}

function destroy(self) {
  self[/* resource */1][0] = undefined;
  return self[/* emitter */0].removeAllListeners();
}

function update(resource, self) {
  self[/* resource */1][0] = Caml_option.some(resource);
  return /* () */0;
}

exports.make = make;
exports.acquire = acquire;
exports.supply = supply;
exports.destroy = destroy;
exports.update = update;
/* events Not a pure module */
