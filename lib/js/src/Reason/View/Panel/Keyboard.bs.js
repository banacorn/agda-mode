// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var ReactDOMRe = require("reason-react/lib/js/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Util$AgdaMode = require("../../Util.bs.js");
var CandidateSymbols$AgdaMode = require("./CandidateSymbols.bs.js");

var component = ReasonReact.statelessComponent("Keyboard");

function make(activated, buffer, keySuggestions, candidateSymbols, updateTranslation, insertCharacter, chooseSymbol, _children) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function (_self) {
                var className = Util$AgdaMode.toClassName(Util$AgdaMode.addClass("hidden", !activated, /* :: */Block.simpleVariant("::", [
                            "input-method",
                            /* [] */0
                          ])));
                var bufferClassName = Util$AgdaMode.toClassName(Util$AgdaMode.addClass("hidden", Rebase.$$String[/* isEmpty */5](buffer), /* :: */Block.simpleVariant("::", [
                            "inline-block",
                            /* :: */Block.simpleVariant("::", [
                                "buffer",
                                /* [] */0
                              ])
                          ])));
                return React.createElement("section", {
                            className: className
                          }, React.createElement("div", {
                                className: "keyboard"
                              }, React.createElement("div", {
                                    className: bufferClassName
                                  }, buffer), ReactDOMRe.createElementVariadic("div", {
                                    className: "keys btn-group btn-group-sm"
                                  }, Rebase.$$Array[/* map */0]((function (key) {
                                          return React.createElement("button", {
                                                      key: key,
                                                      className: "btn",
                                                      onClick: (function (param) {
                                                          return Curry._1(insertCharacter, key);
                                                        })
                                                    }, key);
                                        }), keySuggestions))), ReasonReact.element(undefined, undefined, CandidateSymbols$AgdaMode.make(candidateSymbols, updateTranslation, chooseSymbol, /* array */[])));
              }),
            component[/* initialState */10],
            component[/* retainedProps */11],
            component[/* reducer */12],
            component[/* jsElementWrapped */13]
          ]);
}

var jsComponent = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.activated, jsProps.buffer, jsProps.keySuggestions, jsProps.candidateSymbols, jsProps.updateTranslation, jsProps.insertCharacter, jsProps.chooseSymbol, /* array */[]);
      }));

exports.component = component;
exports.make = make;
exports.jsComponent = jsComponent;
/* component Not a pure module */
