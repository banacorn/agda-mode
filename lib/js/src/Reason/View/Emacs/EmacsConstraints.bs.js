// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var ReactDOMRe = require("reason-react/lib/js/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Emacs$AgdaMode = require("../../Emacs.bs.js");
var EmacsComponent$AgdaMode = require("./EmacsComponent.bs.js");

var component = ReasonReact.statelessComponent("EmacsConstraints");

function make(body, _) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function () {
                var parsed = Emacs$AgdaMode.Parser[/* constraints */9](body);
                return React.createElement("section", {
                            className: "metas"
                          }, ReactDOMRe.createElementVariadic("ul", undefined, $$Array.map((function (value) {
                                      return ReasonReact.element(undefined, undefined, EmacsComponent$AgdaMode.Output[/* make */1](value, /* array */[]));
                                    }), parsed)));
              }),
            component[/* initialState */10],
            component[/* retainedProps */11],
            component[/* reducer */12],
            component[/* jsElementWrapped */13]
          ]);
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
