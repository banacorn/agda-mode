// Generated by BUCKLESCRIPT VERSION 5.0.1, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Emacs__Error$AgdaMode = require("./Emacs__Error.bs.js");
var Emacs__Context$AgdaMode = require("./Emacs__Context.bs.js");
var Emacs__WhyInScope$AgdaMode = require("./Emacs__WhyInScope.bs.js");
var Emacs__SearchAbout$AgdaMode = require("./Emacs__SearchAbout.bs.js");
var Emacs__GoalTypeContext$AgdaMode = require("./Emacs__GoalTypeContext.bs.js");
var Emacs__AllGoalsWarnings$AgdaMode = require("./Emacs__AllGoalsWarnings.bs.js");

var component = ReasonReact.statelessComponent("EmacsBody");

function make(data, _children) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function (_self) {
                var exit = 0;
                switch (data.tag | 0) {
                  case 0 : 
                      return ReasonReact.element(undefined, undefined, Emacs__AllGoalsWarnings$AgdaMode.make(data[0], /* array */[]));
                  case 1 : 
                      return ReasonReact.element(undefined, undefined, Emacs__GoalTypeContext$AgdaMode.make(data[0], /* array */[]));
                  case 2 : 
                  case 3 : 
                      exit = 1;
                      break;
                  case 4 : 
                      return ReasonReact.element(undefined, undefined, Emacs__WhyInScope$AgdaMode.make(data[0], /* array */[]));
                  case 5 : 
                      return ReasonReact.element(undefined, undefined, Emacs__SearchAbout$AgdaMode.make(data[0], /* array */[]));
                  case 6 : 
                      return ReasonReact.element(undefined, undefined, Emacs__Error$AgdaMode.make(data[0], /* array */[]));
                  case 7 : 
                      var body = data[0];
                      var match = Rebase.$$String[/* isEmpty */5](body);
                      if (match) {
                        return null;
                      } else {
                        return React.createElement("p", undefined, body);
                      }
                  
                }
                if (exit === 1) {
                  return ReasonReact.element(undefined, undefined, Emacs__Context$AgdaMode.make(data[0], /* array */[]));
                }
                
              }),
            component[/* initialState */10],
            component[/* retainedProps */11],
            component[/* reducer */12],
            component[/* jsElementWrapped */13]
          ]);
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
