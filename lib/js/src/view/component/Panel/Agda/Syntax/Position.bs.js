// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Link$AgdaMode = require("../../Body/Link.bs.js");

var component = ReasonReact.statelessComponent("Range");

function rangeToStr() {
  return "asd";
}

function make(range, emit, $staropt$star, _) {
  var abbr = $staropt$star !== undefined ? $staropt$star : false;
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              if (abbr) {
                return ReasonReact.element(undefined, undefined, Link$AgdaMode.make(range, true, undefined, emit, /* array */[React.createElement("span", {
                                      className: "text-subtle range icon icon-link"
                                    })]));
              } else {
                return ReasonReact.element(undefined, undefined, Link$AgdaMode.make(range, true, undefined, emit, /* array */[React.createElement("span", {
                                      className: "text-subtle range icon icon-link"
                                    })]));
              }
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var jsComponent = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.rangeGet, jsProps.emitGet, undefined, /* array */[]);
      }));

exports.component = component;
exports.rangeToStr = rangeToStr;
exports.make = make;
exports.jsComponent = jsComponent;
/* component Not a pure module */
