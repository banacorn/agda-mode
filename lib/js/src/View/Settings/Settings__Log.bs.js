// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var Util$AgdaMode = require("../../Util.bs.js");
var Command$AgdaMode = require("../../Command.bs.js");

function Settings__Log$Log(Props) {
  var log = Props.log;
  var rawText = Util$AgdaMode.React[/* manyIn */0]("ol")(Rebase.$$Array[/* map */0]((function (text) {
              return React.createElement("li", undefined, text);
            }), log[/* response */1][/* rawText */0]));
  return React.createElement("li", {
              className: "agda-settings-log-entry"
            }, React.createElement("h2", undefined, Command$AgdaMode.Remote[/* toString */2](log[/* request */0][/* command */2])), rawText);
}

var Log = /* module */Block.localModule(["make"], [Settings__Log$Log]);

function Settings__Log(Props) {
  var connection = Props.connection;
  var hidden = Props.hidden;
  var className = Curry._1(Util$AgdaMode.ClassName[/* serialize */2], Util$AgdaMode.ClassName[/* addWhen */1]("hidden", hidden, /* :: */Block.simpleVariant("::", [
              "agda-settings-log",
              /* [] */0
            ])));
  var logs = Util$AgdaMode.React[/* manyIn */0]("ol")(Rebase.$$Array[/* map */0]((function (log) {
              return React.createElement(Settings__Log$Log, {
                          log: log
                        });
            }), Rebase.$$Option[/* mapOr */18]((function (conn) {
                  return conn[/* logs */4];
                }), /* array */[], connection)));
  return React.createElement("section", {
              className: className
            }, React.createElement("h1", undefined, React.createElement("span", {
                      className: "icon icon-comment-discussion"
                    }), React.createElement("span", undefined, "Log")), React.createElement("hr", undefined), React.createElement("p", undefined, "Keeps track of what Agda said what we've parsed. \nFor reporting parse errors. \nRefreshed on reload (C-c C-l)"), React.createElement("hr", undefined), logs);
}

var make = Settings__Log;

exports.Log = Log;
exports.make = make;
/* react Not a pure module */
