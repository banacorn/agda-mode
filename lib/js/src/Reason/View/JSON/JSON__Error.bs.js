// Generated by BUCKLESCRIPT VERSION 4.0.17, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Call$AgdaMode = require("./Typechecking/Call.bs.js");
var Range$AgdaMode = require("../Range.bs.js");
var TypeError$AgdaMode = require("./Typechecking/TypeError.bs.js");

function typeErrorToHeader(error) {
  switch (error.tag | 0) {
    case 0 : 
    case 1 : 
        return "Generic Error";
    case 2 : 
        return "Should end in Application of the Datatype";
    case 3 : 
        return "Shadowed Module";
    case 4 : 
        return "Should be Pi";
    case 5 : 
        return "Should be a Sort";
    case 6 : 
        return "Unequal Terms";
    case 7 : 
        return "Clashing Definition";
    case 8 : 
        return "Module Arity Mismatch";
    case 9 : 
        return "No RHS Requires Absurd Pattern";
    case 10 : 
        return "Not in Scope";
    case 11 : 
        return "No such Module";
    case 12 : 
        return "Ambiguous Name";
    case 13 : 
        return "Unregistered Type Error";
    
  }
}

function errorToHeader(error) {
  switch (error.tag | 0) {
    case 0 : 
        return "Type Error: " + typeErrorToHeader(error[2]);
    case 1 : 
        return "Exception";
    case 2 : 
        return "IOException";
    case 3 : 
        return "PatternError";
    
  }
}

var component = ReasonReact.statelessComponent("Error");

function make(value, rawString, _children) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function (_self) {
                switch (value.tag | 0) {
                  case 0 : 
                      var call = value[1];
                      return React.createElement("section", undefined, ReasonReact.element(undefined, undefined, Range$AgdaMode.make(value[0], undefined, /* array */[])), ReasonReact.element(undefined, undefined, TypeError$AgdaMode.make(value[2], rawString, /* array */[])), call !== undefined ? ReasonReact.element(undefined, undefined, Call$AgdaMode.make(call, /* array */[])) : React.createElement(React.Fragment, undefined));
                  case 1 : 
                  case 2 : 
                      return React.createElement("section", undefined, rawString);
                  case 3 : 
                      return React.createElement("section", undefined, "Pattern violation (you shouldn't see this)");
                  
                }
              }),
            component[/* initialState */10],
            component[/* retainedProps */11],
            component[/* reducer */12],
            component[/* jsElementWrapped */13]
          ]);
}

exports.typeErrorToHeader = typeErrorToHeader;
exports.errorToHeader = errorToHeader;
exports.component = component;
exports.make = make;
/* component Not a pure module */
