// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var $$String = require("bs-platform/lib/js/string.js");
var Type__View$AgdaMode = require("../Type/Type__View.bs.js");

function Component__Link(Props) {
  var targetOpt = Props.target;
  var jumpOpt = Props.jump;
  var hoverOpt = Props.hover;
  var classNameOpt = Props.className;
  var children = Props.children;
  var target = targetOpt !== undefined ? targetOpt : ({
        TAG: 0,
        _0: /* NoRange */0,
        [Symbol.for("name")]: "RangeLink"
      });
  var jump = jumpOpt !== undefined ? jumpOpt : false;
  var hover = hoverOpt !== undefined ? hoverOpt : false;
  var className = classNameOpt !== undefined ? classNameOpt : /* [] */0;
  var target_;
  if (target.TAG) {
    target_ = {
      TAG: 1,
      _0: target._0,
      [Symbol.for("name")]: "HoleLink"
    };
  } else {
    var range = target._0;
    target_ = range && range._1.length !== 0 ? ({
          TAG: 0,
          _0: range,
          [Symbol.for("name")]: "RangeLink"
        }) : undefined;
  }
  var emit = React.useContext(Type__View$AgdaMode.Mouse.emitter);
  if (target_ !== undefined) {
    return React.createElement("span", {
                className: $$String.concat(" ", {
                      hd: "link",
                      tl: className
                    }),
                onClick: (function (param) {
                    if (jump) {
                      return Curry._1(emit, {
                                  TAG: 0,
                                  _0: target_,
                                  [Symbol.for("name")]: "JumpToTarget"
                                });
                    }
                    
                  }),
                onMouseOut: (function (param) {
                    if (hover) {
                      return Curry._1(emit, {
                                  TAG: 2,
                                  _0: target_,
                                  [Symbol.for("name")]: "MouseOut"
                                });
                    }
                    
                  }),
                onMouseOver: (function (param) {
                    if (hover) {
                      return Curry._1(emit, {
                                  TAG: 1,
                                  _0: target_,
                                  [Symbol.for("name")]: "MouseOver"
                                });
                    }
                    
                  })
              }, children);
  } else {
    return React.createElement("span", {
                className: $$String.concat(" ", {
                      hd: "link",
                      tl: className
                    })
              }, children);
  }
}

var make = Component__Link;

exports.make = make;
/* react Not a pure module */
