// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var $$String = require("bs-platform/lib/js/string.js");
var Type__View$AgdaMode = require("../Type/Type__View.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function Component__Link(Props) {
  var targetOpt = Props.target;
  var jumpOpt = Props.jump;
  var hoverOpt = Props.hover;
  var classNameOpt = Props.className;
  var children = Props.children;
  var target = targetOpt !== undefined ? targetOpt : /* RangeLink */Caml_chrome_debugger.variant("RangeLink", 0, [/* NoRange */0]);
  var jump = jumpOpt !== undefined ? jumpOpt : false;
  var hover = hoverOpt !== undefined ? hoverOpt : false;
  var className = classNameOpt !== undefined ? classNameOpt : /* [] */0;
  var target_;
  if (target.tag) {
    target_ = /* HoleLink */Caml_chrome_debugger.variant("HoleLink", 1, [target[0]]);
  } else {
    var range = target[0];
    target_ = range && range[1].length !== 0 ? /* RangeLink */Caml_chrome_debugger.variant("RangeLink", 0, [range]) : undefined;
  }
  var emit = React.useContext(Type__View$AgdaMode.Mouse.emitter);
  if (target_ !== undefined) {
    var t = target_;
    return React.createElement("span", {
                className: $$String.concat(" ", /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        "link",
                        className
                      ])),
                onClick: (function (param) {
                    if (jump) {
                      return Curry._1(emit, /* JumpToTarget */Caml_chrome_debugger.variant("JumpToTarget", 0, [t]));
                    } else {
                      return 0;
                    }
                  }),
                onMouseOut: (function (param) {
                    if (hover) {
                      return Curry._1(emit, /* MouseOut */Caml_chrome_debugger.variant("MouseOut", 2, [t]));
                    } else {
                      return 0;
                    }
                  }),
                onMouseOver: (function (param) {
                    if (hover) {
                      return Curry._1(emit, /* MouseOver */Caml_chrome_debugger.variant("MouseOver", 1, [t]));
                    } else {
                      return 0;
                    }
                  })
              }, children);
  } else {
    return React.createElement("span", {
                className: $$String.concat(" ", /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        "link",
                        className
                      ]))
              }, children);
  }
}

var make = Component__Link;

exports.make = make;
/* react Not a pure module */
