// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Promise$BsMocha = require("bs-mocha/lib/js/src/Promise.bs.js");
var AgdaMode$AgdaMode = require("../src/AgdaMode.bs.js");
var Test__Util$AgdaMode = require("./Test__Util.bs.js");

Promise$BsMocha.before(undefined)(undefined, undefined, undefined, Test__Util$AgdaMode.Package.activate);

Promise$BsMocha.after(undefined)(undefined, undefined, undefined, Test__Util$AgdaMode.Package.deactivate);

Mocha$BsMocha.describe("Instances")(undefined, undefined, undefined, (function (param) {
        Promise$BsMocha.it_skip("should have no instances before opening any files")(undefined, undefined, undefined, (function (param) {
                return Promise.resolve(Test__Util$AgdaMode.Assert.equal(undefined, 0, AgdaMode$AgdaMode.Instances.size(/* () */0)));
              }));
        Promise$BsMocha.it("should respect the number of opened .agda file")(undefined, undefined, undefined, (function (param) {
                return Curry._1(Test__Util$AgdaMode.$$File.openAsset, "Temp.agda").then((function (editor) {
                                Test__Util$AgdaMode.Assert.equal(undefined, 1, AgdaMode$AgdaMode.Instances.size(/* () */0));
                                var pane = atom.workspace.getActivePane();
                                return pane.destroyItem(editor, true);
                              })).then((function (destroyed) {
                              Test__Util$AgdaMode.Assert.equal(undefined, AgdaMode$AgdaMode.Instances.size(/* () */0), destroyed ? 0 : 1);
                              return Promise.resolve(/* () */0);
                            }));
              }));
        Promise$BsMocha.it("should respect the number of opened .lagda file")(undefined, undefined, undefined, (function (param) {
                return Curry._1(Test__Util$AgdaMode.$$File.openAsset, "Blank2.lagda").then((function (editor) {
                                Test__Util$AgdaMode.Assert.equal(undefined, 1, AgdaMode$AgdaMode.Instances.size(/* () */0));
                                var pane = atom.workspace.getActivePane();
                                return pane.destroyItem(editor, true);
                              })).then((function (destroyed) {
                              Test__Util$AgdaMode.Assert.equal(undefined, destroyed ? 0 : 1, AgdaMode$AgdaMode.Instances.size(/* () */0));
                              return Promise.resolve(/* () */0);
                            }));
              }));
        return Promise$BsMocha.it("should include '.agda' in the classlist")(undefined, undefined, undefined, (function (param) {
                      return Curry._1(Test__Util$AgdaMode.$$File.openAsset, "Temp.agda").then((function (editor) {
                                    Test__Util$AgdaMode.Assert.yes(atom.views.getView(editor).classList.contains("agda"));
                                    return Promise.resolve(/* () */0);
                                  }));
                    }));
      }));

/*  Not a pure module */
