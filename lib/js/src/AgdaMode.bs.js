// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';


var config = {
  agdaPath: {
    title: "Agda path",
    description: "Path to the executable of Agda, automatically inferred when possible. Overwrite to override.",
    type: "string",
    default: "",
    order: 0
  },
  agdaArgs: {
    title: "Agda command-line arguments",
    description: "For example: to use \"agda --cubical --safe\", put \"--cubical --safe\" in this field",
    type: "string",
    default: "",
    order: 1
  },
  agdaName: {
    title: "Agda name",
    description: "Default to \"agda\", this is the name we use to search for the path",
    type: "string",
    default: "agda",
    order: 2
  },
  enableJSONProtocol: {
    title: "Enable the JSON protocol (experimental)",
    description: "Demand Agda to output in JSON format when possible",
    type: "boolean",
    default: false,
    order: 3
  },
  libraryPath: {
    title: "Libraries",
    description: "Paths to include (such as agda-stdlib), seperate with comma. Useless after Agda 2.5.0",
    type: "array",
    default: [],
    items: {
      type: "string"
    },
    order: 10
  },
  backend: {
    title: "Backend",
    description: "The backend which is used to compile Agda programs.",
    type: "string",
    default: "GHCNoMain",
    enum: [
      "GHC",
      "GHCNoMain"
    ],
    order: 11
  },
  highlightingMethod: {
    title: "Highlighting information passing",
    description: "Receive parsed result from Agda, directly from stdio, or indirectly from temporary files (which requires frequent disk access)",
    type: "string",
    default: "Direct",
    enum: [
      "Indirect",
      "Direct"
    ],
    order: 20
  },
  maxBodyHeight: {
    title: "Max panel size",
    description: "The max height the panel could strech",
    type: "integer",
    default: 170,
    minimum: 40,
    maximum: 1010,
    order: 30
  },
  inputMethod: {
    title: "Input method",
    description: "Enable input method",
    type: "boolean",
    default: true,
    order: 40
  },
  inputMethodExtension: {
    title: "Input method extension",
    description: "For adding or prioritizing key mappings. Please edit this from \"Settings > Input Method > Keymap extensions\"",
    type: "string",
    default: "{\"^r\":[\"ʳ\"],\"^l\":[\"ˡ\"]}",
    order: 41
  },
  trimSpaces: {
    title: "Trim spaces",
    description: "Remove leading and trailing spaces of an expression in an hole, when giving it to Agda. (Default to be False in Emacs, but True in here)",
    type: "boolean",
    default: true,
    order: 50
  }
};

exports.config = config;
/* No side effect */
