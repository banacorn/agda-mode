// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var React = require("react");

function sepBy_(sep, item) {
  if (item) {
    return /* :: */Block.simpleVariant("::", [
              item[0],
              List.concat(List.map((function (i) {
                          return /* :: */Block.simpleVariant("::", [
                                    sep,
                                    /* :: */Block.simpleVariant("::", [
                                        i,
                                        /* [] */0
                                      ])
                                  ]);
                        }), item[1]))
            ]);
  } else {
    return /* [] */0;
  }
}

function sepBy(sep, item) {
  if (item) {
    var xs = item[1];
    var x = item[0];
    if (xs) {
      return React.createElement(React.Fragment, undefined, x, $$Array.of_list(List.map((function (i) {
                            return React.createElement(React.Fragment, undefined, sep, i);
                          }), xs)));
    } else {
      return x;
    }
  } else {
    return React.createElement(React.Fragment, undefined);
  }
}

var contains = (function (haystack, needle) { return (haystack.indexOf(needle) !== -1)});

function enclosedBy(front, back, item) {
  return React.createElement(React.Fragment, undefined, front, " ", item, " ", back);
}

exports.sepBy_ = sepBy_;
exports.sepBy = sepBy;
exports.contains = contains;
exports.enclosedBy = enclosedBy;
/* contains Not a pure module */
