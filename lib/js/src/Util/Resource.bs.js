// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function make(param) {
  var resource = {
    contents: undefined
  };
  var queue = {
    contents: /* [] */0
  };
  var acquire = function (param) {
    var match = resource.contents;
    if (match !== undefined) {
      return $$Promise.resolved(Caml_option.valFromOption(match));
    } else {
      var match$1 = $$Promise.pending(/* () */0);
      queue.contents = /* :: */Caml_chrome_debugger.simpleVariant("::", [
          match$1[1],
          queue.contents
        ]);
      return match$1[0];
    }
  };
  var supply = function (x) {
    resource.contents = Caml_option.some(x);
    return Rebase.List.forEach((function (resolve) {
                  return Curry._1(resolve, x);
                }), queue.contents);
  };
  return {
          acquire: acquire,
          supply: supply
        };
}

exports.make = make;
/* Promise Not a pure module */
