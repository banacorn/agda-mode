// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Util$AgdaMode = require("../../Util/Util.bs.js");
var Emacs__Parser$AgdaMode = require("./Emacs__Parser.bs.js");
var Emacs__Component$AgdaMode = require("./Emacs__Component.bs.js");

function parse(raw) {
  var lines = raw.split("\n");
  var __x = Emacs__Parser$AgdaMode.partiteWarningsOrErrors("errors")(Util$AgdaMode.Dict.partite((function (param) {
              var match = param[1] === 0;
              if (match) {
                return "errors";
              }
              
            }), lines));
  return Rebase.$$Option.mapOr((function (metas) {
                return Rebase.$$Array.filterMap((function (x) {
                              return x;
                            }), Rebase.$$Array.map(Emacs__Component$AgdaMode.WarningError.parseError, metas));
              }), /* array */[], Js_dict.get(__x, "errors"));
}

function Emacs__Error(Props) {
  var body = Props.body;
  var partial_arg = Util$AgdaMode.React.manyIn;
  var arg = function (param) {
    return partial_arg("ul", param);
  };
  return (function (eta) {
              return Curry._2(arg, undefined, eta);
            })(Rebase.$$Array.map((function (value) {
                    return React.createElement(Emacs__Component$AgdaMode.WarningError.make, {
                                value: value
                              });
                  }), parse(body)));
}

var make = Emacs__Error;

exports.parse = parse;
exports.make = make;
/* react Not a pure module */
