// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Root$AgdaMode = require("./View/Root.bs.js");
var Event$AgdaMode = require("./Util/Event.bs.js");
var Editors$AgdaMode = require("./Editors.bs.js");
var TaskRunner$AgdaMode = require("./Task/TaskRunner.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var RunningInfo$AgdaMode = require("./RunningInfo.bs.js");

function activate(instance) {
  if (instance.isLoaded) {
    return Curry._1(instance.view.activate, /* () */0);
  } else {
    return $$Promise.resolved(/* () */0);
  }
}

function deactivate(instance) {
  if (instance.isLoaded) {
    return Curry._1(instance.view.deactivate, /* () */0);
  } else {
    return $$Promise.resolved(/* () */0);
  }
}

function destroy(instance) {
  return Curry._1(instance.view.destroy, /* () */0);
}

function make(textEditor) {
  atom.views.getView(textEditor).classList.add("agda");
  var editors = Editors$AgdaMode.make(textEditor);
  var view = Root$AgdaMode.initialize(editors);
  var instance = {
    editors: editors,
    view: view,
    history: {
      checkpoints: [],
      needsReloading: false
    },
    isLoaded: false,
    highlightings: [],
    goals: [],
    connection: undefined,
    runningInfo: RunningInfo$AgdaMode.make(/* () */0),
    onDispatch: Event$AgdaMode.make(/* () */0),
    onConnectionError: Event$AgdaMode.make(/* () */0)
  };
  var destructor1 = Curry._1(instance.view.onMouseEvent.on, (function (ev) {
          switch (ev.tag | 0) {
            case /* JumpToTarget */0 :
                TaskRunner$AgdaMode.dispatchCommand(/* Jump */Caml_chrome_debugger.variant("Jump", 9, [ev[0]]), instance);
                return /* () */0;
            case /* MouseOver */1 :
            case /* MouseOut */2 :
                return /* () */0;
            
          }
        }));
  $$Promise.get(Curry._1(instance.view.onDestroy.once, /* () */0), (function (param) {
          return Curry._1(destructor1, /* () */0);
        }));
  return instance;
}

function dispatchUndo(instance) {
  instance.editors.source.undo();
  if (instance.history.needsReloading) {
    TaskRunner$AgdaMode.dispatchCommand(/* Load */0, instance);
    instance.history.needsReloading = false;
    return /* () */0;
  } else {
    return 0;
  }
}

function getID(instance) {
  return Editors$AgdaMode.getID(instance.editors);
}

var $$Event = /* alias */0;

var Goals = /* alias */0;

var Highlightings = /* alias */0;

var Connections = /* alias */0;

var TextEditors = /* alias */0;

exports.$$Event = $$Event;
exports.Goals = Goals;
exports.Highlightings = Highlightings;
exports.Connections = Connections;
exports.TextEditors = TextEditors;
exports.activate = activate;
exports.deactivate = deactivate;
exports.destroy = destroy;
exports.make = make;
exports.dispatchUndo = dispatchUndo;
exports.getID = getID;
/* Promise Not a pure module */
