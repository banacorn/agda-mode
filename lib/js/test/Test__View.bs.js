// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Chai = require("chai");
var Curry = require("bs-platform/lib/js/curry.js");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var Expect$BsChai = require("bs-chai/lib/js/src/Expect.bs.js");
var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Event$AgdaMode = require("../src/Util/Event.bs.js");
var Promise$BsMocha = require("bs-mocha/lib/js/src/Promise.bs.js");
var Test__Util$AgdaMode = require("./Test__Util.bs.js");
var Webapi__Dom__Element = require("bs-webapi/lib/js/src/Webapi/Webapi__Dom/Webapi__Dom__Element.js");

Mocha$BsMocha.describe("View")(undefined, undefined, undefined, (function (param) {
        var partial_arg = Test__Util$AgdaMode.Package[/* activate */2];
        Promise$BsMocha.before_each(undefined)(undefined, undefined, undefined, Curry._2(Rebase.Fn[/* >> */6], Test__Util$AgdaMode.Package[/* deactivate */3], (function (param) {
                    return param.then(Curry.__1(partial_arg));
                  })));
        return Mocha$BsMocha.describe("when activating agda-mode")(undefined, undefined, undefined, (function (param) {
                      return Promise$BsMocha.it("should mount the panel at the bottom")(undefined, undefined, undefined, (function (param) {
                                    return Curry._1(Test__Util$AgdaMode.$$File[/* openAsset */1], "Blank1.agda").then((function (param) {
                                                        return Test__Util$AgdaMode.dispatch("agda-mode:load", param);
                                                      })).then(Test__Util$AgdaMode.getInstance).then((function (instance) {
                                                    return Event$AgdaMode.once(instance[/* onDispatch */10]);
                                                  })).then((function (param) {
                                                  var children = Rebase.$$Array[/* filterMap */23](Webapi__Dom__Element.ofNode, Rebase.$$Array[/* flatMap */5](Curry._2(Rebase.Fn[/* >> */6], Curry._2(Rebase.Fn[/* >> */6], (function (prim) {
                                                                      return atom.views.getView(prim);
                                                                    }), (function (prim) {
                                                                      return prim.childNodes;
                                                                    })), (function (prim) {
                                                                  return Array.prototype.slice.call(prim);
                                                                })), atom.workspace.getBottomPanels()));
                                                  Curry._3(Expect$BsChai.Combos[/* End */34][/* to_include */4], undefined, "agda-mode", Chai.expect(Rebase.$$Array[/* map */0]((function (prim) {
                                                                  return prim.className;
                                                                }), children)));
                                                  return Promise.resolve(/* () */0);
                                                }));
                                  }));
                    }));
      }));

/*  Not a pure module */
